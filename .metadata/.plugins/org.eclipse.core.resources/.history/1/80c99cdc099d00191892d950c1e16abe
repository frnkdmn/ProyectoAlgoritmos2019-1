package semana06;

import java.awt.BorderLayout;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ItemListener;
import java.awt.event.ItemEvent;

public class DialogoGenerarReportes extends JDialog implements ActionListener, ItemListener {

	private final JPanel contentPanel = new JPanel();
	private JLabel lblNewLabel;
	private JComboBox<String> cboTipoReporte;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			DialogoGenerarReportes dialog = new DialogoGenerarReportes();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		}
		catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public DialogoGenerarReportes() {
		setTitle("Generar Reportes");
		setBounds(100, 100, 540, 400);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		
		lblNewLabel = new JLabel("Tipo de Reporte");
		lblNewLabel.setBounds(10, 11, 91, 14);
		contentPanel.add(lblNewLabel);
		
		cboTipoReporte = new JComboBox<String>();
		cboTipoReporte.addItemListener(this);
		cboTipoReporte.setModel(new DefaultComboBoxModel<String>(new String[] {"Ventas por marca", "Marcas con venta \u00F3ptima", "Precios en relaci\u00F3n al promedio", "Precio promedio, mayor y menor"}));
		cboTipoReporte.setBounds(101, 8, 300, 20);
		contentPanel.add(cboTipoReporte);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(425, 7, 89, 23);
		contentPanel.add(btnCerrar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 36, 504, 314);
		contentPanel.add(scrollPane);
		
		txtS = new JTextArea();
		scrollPane.setViewportView(txtS);
		imprimir("Ventas por colchón" + "\n");
		imprimir("Marcas			: "+Tienda.marca0 );
		imprimir("Cantidad de ventas		: "+Tienda.Ventas0);
		imprimir("Cantidad total de unidades vendidas 	: "+Tienda.TotalUnidadesVendidas0);
		imprimir("Importente total acumulado		: "+Tienda.ImporteTotal0 +"\n");
		imprimir("Marcas			: "+Tienda.marca1 );
		imprimir("Cantidad de ventas		: "+Tienda.Ventas1);
		imprimir("Cantidad total de unidades vendidas 	: "+Tienda.TotalUnidadesVendidas1);
		imprimir("Importente total acumulado		: "+Tienda.ImporteTotal1 +"\n");
		imprimir("Marcas			: "+Tienda.marca2);
		imprimir("Cantidad de ventas		: "+Tienda.Ventas2);
		imprimir("Cantidad total de unidades vendidas 	: "+Tienda.TotalUnidadesVendidas2);
		imprimir("Importente total acumulado		: "+Tienda.ImporteTotal2 +"\n");
		imprimir("Marcas			: "+Tienda.marca3);
		imprimir("Cantidad de ventas		: "+Tienda.Ventas3);
		imprimir("Cantidad total de unidades vendidas 	: "+Tienda.TotalUnidadesVendidas3);
		imprimir("Importente total acumulado		: "+Tienda.ImporteTotal3 +"\n");
		imprimir("Marcas			: "+Tienda.marca4);
		imprimir("Cantidad de ventas		: "+Tienda.Ventas4);
		imprimir("Cantidad total de unidades vendidas 	: "+Tienda.TotalUnidadesVendidas4);
		imprimir("Importente total acumulado		: "+Tienda.ImporteTotal4 +"\n");
		imprimir("Importe total general acumulado	: "+Tienda.ImporteTotalGeneral);
		imprimir("Cantidad total general de ventas	: "+Tienda.CantidadTotalGeneral);
	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCerrar) {
			actionPerformedBtnNewButton(e);
		}
	}
	protected void actionPerformedBtnNewButton(ActionEvent e) {
		dispose();
	}
	public void itemStateChanged(ItemEvent arg0) {
		if (arg0.getSource() == cboTipoReporte) {
			itemStateChangedCboTipoReporte(arg0);
		}
	}
	void imprimir(String texto){
		txtS.append(""+texto+"\n");
	}
	double calcularPromedio(){
		return (Tienda.precio0+Tienda.precio1+Tienda.precio2+Tienda.precio3+Tienda.precio4)/5;
	}
	double calcularMayor(){
		double mayor=Tienda.precio0;
		if(Tienda.precio1>mayor) mayor=Tienda.precio1;
		if(Tienda.precio2>mayor) mayor=Tienda.precio2;
		if(Tienda.precio3>mayor) mayor=Tienda.precio3;
		if(Tienda.precio4>mayor) mayor=Tienda.precio4; 
		return mayor;
	}
	double calcularMenor(){
		double menor=Tienda.precio0;
		if(Tienda.precio1<menor) menor=Tienda.precio1;
		if(Tienda.precio2<menor) menor=Tienda.precio2;
		if(Tienda.precio3<menor) menor=Tienda.precio3;
		if(Tienda.precio4<menor) menor=Tienda.precio4; 
		return menor;
	}
	void verVentasMarca(){
		txtS.setText("");
		imprimir("Ventas por colchón" + "\n");
		imprimir("Marcas			:" +Tienda.marca0);
		imprimir("Cantidad de ventas		: " + Tienda.Ventas0);
		imprimir("Cantidad total de unidades vendidas 	: " + Tienda.TotalUnidadesVendidas0);
		imprimir("Importente total acumulado		: "+ Tienda.ImporteTotal0);
		imprimir("Marcas			:" +Tienda.marca1);
		imprimir("Cantidad de ventas		: " + Tienda.Ventas1);
		imprimir("Cantidad total de unidades vendidas 	: " + Tienda.TotalUnidadesVendidas1);
		imprimir("Importente total acumulado		: "+ Tienda.ImporteTotal1);
		imprimir("Marcas			:" +Tienda.marca2);
		imprimir("Cantidad de ventas		: " + Tienda.Ventas2);
		imprimir("Cantidad total de unidades vendidas 	: " + Tienda.TotalUnidadesVendidas2);
		imprimir("Importente total acumulado		: "+ Tienda.ImporteTotal2);
		imprimir("Marcas			:" +Tienda.marca3);
		imprimir("Cantidad de ventas		: " + Tienda.Ventas3);
		imprimir("Cantidad total de unidades vendidas 	: " + Tienda.TotalUnidadesVendidas3);
		imprimir("Importente total acumulado		: "+ Tienda.ImporteTotal3);
		imprimir("Marcas			:" +Tienda.marca4);
		imprimir("Cantidad de ventas		: " + Tienda.Ventas4);
		imprimir("Cantidad total de unidades vendidas 	: " + Tienda.TotalUnidadesVendidas4);
		imprimir("Importente total acumulado		: "+ Tienda.ImporteTotal4);
		imprimir("Importe total general acumulado	: " + Tienda.ImporteTotalGeneral);
		imprimir("Cantidad total general de ventas	: " + Tienda.CantidadTotalGeneral);
	}
	void calcularPreciosProMayMen(double promedio,double menor, double mayor){
		txtS.setText("");
		imprimir("Precio promedio, menor y mayor" + "\n");
		imprimir("Precio promedio : "+String.format("%.2f",promedio));
		imprimir("Precio menor	  : "+String.format("%.2f",menor));
		imprimir("Precio mayor	  : "+String.format("%.2f",mayor));
	}
	protected void itemStateChangedCboTipoReporte(ItemEvent arg0) {
		procesar();
	}
	void procesar(){
		int item = cboTipoReporte.getSelectedIndex();
		double promedio=calcularPromedio();
		double mayor=calcularMayor();
		double menor=calcularMenor();
		switch (item) {
			case 0:
				verVentasMarca();
				break;
			case 1:
				txtS.setText("Colchones con venta óptima" + "\n\n");
				txtS.append ("Marca			: Springwall" + "\n");
				txtS.append ("Cantidad total de unidades vendidas	: 15 (5 más que la cantidad óptima)" + "\n\n");
				txtS.append ("Marca			: Cisne" + "\n");
				txtS.append ("Cantidad total de unidades vendidas	: 25 (15 más que la cantidad óptima)" + "\n");
				txtS.append ("." + "\n");
				txtS.append ("." + "\n");
				txtS.append (".");
				break;
			case 2:
				txtS.setText("Precios en relación al promedio" + "\n\n");
				txtS.append ("Nombre	: Suavestar" + "\n");
				txtS.append ("Precio	: 499.0 (menor al promedio)" + "\n\n");
				txtS.append ("Nombre	: Springwall" + "\n");
				txtS.append ("Precio	: 679.0 (mayor al promedio)" + "\n\n");
				txtS.append ("Nombre	: Paraiso" + "\n");
				txtS.append ("Precio	: 479.0 (menor al promedio)" + "\n\n");
				txtS.append ("Nombre	: Drimer" + "\n");
				txtS.append ("Precio	: 749.0 (mayor al promedio)" + "\n\n");
				txtS.append ("Nombre	: Cisne" + "\n");
				txtS.append ("Precio	: 389.0 (mayor al promedio)" + "\n\n");
				txtS.append ("Precio promedio : S/ 559.0");
				break;
			default:	
				calcularPreciosProMayMen(promedio, menor, mayor);
		}
	}
}
